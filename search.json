[{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://jrdnbradford.github.io/readMDTable/articles/rvest-benchmarks.html","id":"functions-tested","dir":"Articles","previous_headings":"","what":"Functions Tested","title":"Benchmarking rvest","text":"","code":"test_extract_md_tables <- function(content) {   extract_md_tables(content, show_col_types = FALSE) }  test_read_md_table <- function(content) {   read_md_table(content, show_col_types = FALSE) }  test_rvest <- function(content) {   rvest::read_html(content) |> rvest::html_table() }"},{"path":"https://jrdnbradford.github.io/readMDTable/articles/rvest-benchmarks.html","id":"benchmark-1","dir":"Articles","previous_headings":"","what":"Benchmark 1","title":"Benchmarking rvest","text":"Comparing readMDTable rvest retrieving parsing markdown file multiple tables non-table content.","code":"mtcars_split_raw_md_url <- \"https://raw.githubusercontent.com/jrdnbradford/readMDTable/refs/heads/main/inst/extdata/mtcars-split.md\" mtcars_split_html_url <- \"https://github.com/jrdnbradford/readMDTable/blob/main/inst/extdata/mtcars-split.md\"  resp <- microbenchmark::microbenchmark(   test_extract_md_tables(mtcars_split_raw_md_url),   test_rvest(mtcars_split_html_url),   times = 100 )  ggplot2::autoplot(resp)"},{"path":"https://jrdnbradford.github.io/readMDTable/articles/rvest-benchmarks.html","id":"benchmark-2","dir":"Articles","previous_headings":"","what":"Benchmark 2","title":"Benchmarking rvest","text":"Comparing readMDTable rvest retrieving parsing markdown table file.","code":"mtcars_raw_md_url <- \"https://raw.githubusercontent.com/jrdnbradford/readMDTable/refs/heads/main/inst/extdata/mtcars.md\" mtcars_html_url <- \"https://github.com/jrdnbradford/readMDTable/blob/main/inst/extdata/mtcars.md\"  resp <- microbenchmark::microbenchmark(   test_read_md_table(mtcars_raw_md_url),   test_rvest(mtcars_html_url),   times = 100 )  ggplot2::autoplot(resp)"},{"path":"https://jrdnbradford.github.io/readMDTable/articles/rvest-benchmarks.html","id":"benchmark-3","dir":"Articles","previous_headings":"","what":"Benchmark 3","title":"Benchmarking rvest","text":"Comparing readMDTable rvest parsing markdown file multiple tables non-table content, already retrieved stored memory.","code":"mtcars_raw_md_file <- readr::read_file(mtcars_split_raw_md_url) mtcars_html_file <- readr::read_file(mtcars_split_html_url)  resp <- microbenchmark::microbenchmark(   test_extract_md_tables(mtcars_raw_md_file),   test_rvest(mtcars_html_file),   times = 100 )  ggplot2::autoplot(resp)"},{"path":"https://jrdnbradford.github.io/readMDTable/articles/rvest-benchmarks.html","id":"benchmark-4","dir":"Articles","previous_headings":"","what":"Benchmark 4","title":"Benchmarking rvest","text":"Comparing readMDTable rvest parsing merely markdown table, already retrieved stored memory.","code":"raw_md <- readr::read_file(mtcars_raw_md_url) html <- readr::read_file(mtcars_html_url)  resp <- microbenchmark::microbenchmark(   test_read_md_table(raw_md),   test_rvest(html),   times = 100 )  ggplot2::autoplot(resp)"},{"path":"https://jrdnbradford.github.io/readMDTable/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jordan Bradford. Author, maintainer, copyright holder.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bradford J (2024). readMDTable: Read Markdown Tables Tibbles. R package version 0.1.1.9001, https://jrdnbradford.github.io/readMDTable/, https://github.com/jrdnbradford/readMDTable.","code":"@Manual{,   title = {readMDTable: Read Markdown Tables into Tibbles},   author = {Jordan Bradford},   year = {2024},   note = {R package version 0.1.1.9001, https://jrdnbradford.github.io/readMDTable/},   url = {https://github.com/jrdnbradford/readMDTable}, }"},{"path":"https://jrdnbradford.github.io/readMDTable/index.html","id":"readmdtable-","dir":"","previous_headings":"","what":"Read Markdown Tables into Tibbles","title":"Read Markdown Tables into Tibbles","text":"readMDTable helps convert raw markdown tables string, file, URL tibbles. Many sites (like GitHub) convert markdown tables HTML tables, making available. See vignette Benchmarking rvest help determine use readMDTable rvest.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Read Markdown Tables into Tibbles","text":"Install latest CRAN release : Install development version GitHub using pak: devtools:","code":"install.packages(\"readMDTable\") pak::pkg_install(\"jrdnbradford/readMDTable\") devtools::install_github(\"jrdnbradford/readMDTable\")"},{"path":"https://jrdnbradford.github.io/readMDTable/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Read Markdown Tables into Tibbles","text":"string, file, URL whose entire content just markdown table, use read_md_table return tibble. string, file, URL markdown file content besides just table tables, headings, paragraphs, etc, use extract_md_tables parse file, pass tables read_md_table, return tibble list tibbles.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/index.html","id":"from-a-file","dir":"","previous_headings":"Usage","what":"From a File","title":"Read Markdown Tables into Tibbles","text":"Read example markdown table package: Read example markdown file multiple tables:","code":"mtcars_file <- read_md_table_example(\"mtcars.md\")  read_md_table(mtcars_file) #> Rows: 32 Columns: 12 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"|\" #> chr  (1): model #> dbl (11): mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 32 × 12 #>    model         mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <chr>       <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 Mazda RX4    21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2 Mazda RX4 …  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3 Datsun 710   22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4 Hornet 4 D…  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5 Hornet Spo…  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6 Valiant      18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7 Duster 360   14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8 Merc 240D    24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9 Merc 230     22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10 Merc 280     19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> # ℹ 22 more rows mtcars_file <- read_md_table_example(\"mtcars-split.md\")  extract_md_tables(mtcars_file, show_col_types = FALSE) #> [[1]] #> # A tibble: 4 × 12 #>   model          mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>   <chr>        <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 Mazda RX4     21       6   160   110  3.9   2.62  16.5     0     1     4     4 #> 2 Mazda RX4 W…  21       6   160   110  3.9   2.88  17.0     0     1     4     4 #> 3 Datsun 710    22.8     4   108    93  3.85  2.32  18.6     1     1     4     1 #> 4 Hornet 4 Dr…  21.4     6   258   110  3.08  3.22  19.4     1     0     3     1 #>  #> [[2]] #> # A tibble: 4 × 12 #>   model          mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>   <chr>        <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 Hornet Spor…  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #> 2 Valiant       18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #> 3 Duster 360    14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #> 4 Merc 240D     24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  #> [[3]] #> # A tibble: 4 × 12 #>   model          mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>   <chr>        <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 Cadillac Fl…  10.4     8 472     205  2.93  5.25  18.0     0     0     3     4 #> 2 Lincoln Con…  10.4     8 460     215  3     5.42  17.8     0     0     3     4 #> 3 Chrysler Im…  14.7     8 440     230  3.23  5.34  17.4     0     0     3     4 #> 4 Fiat 128      32.4     4  78.7    66  4.08  2.2   19.5     1     1     4     1 #>  #> [[4]] #> # A tibble: 6 × 12 #>   model          mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>   <chr>        <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 Porsche 914…  26       4 120.     91  4.43  2.14  16.7     0     1     5     2 #> 2 Lotus Europa  30.4     4  95.1   113  3.77  1.51  16.9     1     1     5     2 #> 3 Ford Panter…  15.8     8 351     264  4.22  3.17  14.5     0     1     5     4 #> 4 Ferrari Dino  19.7     6 145     175  3.62  2.77  15.5     0     1     5     6 #> 5 Maserati Bo…  15       8 301     335  3.54  3.57  14.6     0     1     5     8 #> 6 Volvo 142E    21.4     4 121     109  4.11  2.78  18.6     1     1     4     2"},{"path":"https://jrdnbradford.github.io/readMDTable/index.html","id":"from-a-string","dir":"","previous_headings":"Usage","what":"From a String","title":"Read Markdown Tables into Tibbles","text":"","code":"read_md_table(\"| len | supp | dose |\\n|---|---|---|\\n| 4.2 | VC | 0.5 |\") #> Rows: 1 Columns: 3 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"|\" #> chr (1): supp #> dbl (2): len, dose #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 1 × 3 #>     len supp   dose #>   <dbl> <chr> <dbl> #> 1   4.2 VC      0.5"},{"path":"https://jrdnbradford.github.io/readMDTable/index.html","id":"from-a-url","dir":"","previous_headings":"Usage","what":"From a URL","title":"Read Markdown Tables into Tibbles","text":"","code":"read_md_table(\"https://raw.githubusercontent.com/jrdnbradford/readMDTable/main/inst/extdata/iris.md\") #> Rows: 150 Columns: 5 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"|\" #> chr (1): variety #> dbl (4): sepal.length, sepal.width, petal.length, petal.width #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 150 × 5 #>    sepal.length sepal.width petal.length petal.width variety #>           <dbl>       <dbl>        <dbl>       <dbl> <chr>   #>  1          5.1         3.5          1.4         0.2 Setosa  #>  2          4.9         3            1.4         0.2 Setosa  #>  3          4.7         3.2          1.3         0.2 Setosa  #>  4          4.6         3.1          1.5         0.2 Setosa  #>  5          5           3.6          1.4         0.2 Setosa  #>  6          5.4         3.9          1.7         0.4 Setosa  #>  7          4.6         3.4          1.4         0.3 Setosa  #>  8          5           3.4          1.5         0.2 Setosa  #>  9          4.4         2.9          1.4         0.2 Setosa  #> 10          4.9         3.1          1.5         0.1 Setosa  #> # ℹ 140 more rows extract_md_tables(\"https://raw.githubusercontent.com/jrdnbradford/readMDTable/main/inst/extdata/ToothGrowth.md\") #> Rows: 60 Columns: 4 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"|\" #> chr (1): supp #> dbl (3): rownames, len, dose #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 60 × 4 #>    rownames   len supp   dose #>       <dbl> <dbl> <chr> <dbl> #>  1        1   4.2 VC      0.5 #>  2        2  11.5 VC      0.5 #>  3        3   7.3 VC      0.5 #>  4        4   5.8 VC      0.5 #>  5        5   6.4 VC      0.5 #>  6        6  10   VC      0.5 #>  7        7  11.2 VC      0.5 #>  8        8  11.2 VC      0.5 #>  9        9   5.2 VC      0.5 #> 10       10   7   VC      0.5 #> # ℹ 50 more rows"},{"path":"https://jrdnbradford.github.io/readMDTable/index.html","id":"warnings-and-messy-data","dir":"","previous_headings":"Usage","what":"Warnings and Messy Data","title":"Read Markdown Tables into Tibbles","text":"read_md_table throw warnings potential issues markdown table. many cases still correctly read messy data: extract_md_tables may fail recognize markdown tables improper formatting, result won’t pass content read_md_table therefore won’t return tibble table.","code":"read_md_table( \"  | Name   | Age |            City        | Date   | |-------|-----|-------------|------------|   | Alice |      30 |           | 2021/01/08 |   | Bob          | 25  | Los Angeles | 2023/07/22         | Carol | 27       | Chicago     |      |\" ) #> Warning: ✖ Row 4 of the table does not have the same number of cells as the header row: #>   | Bob | 25 | Los Angeles | 2023/07/22 #> ℹ Expected: 5 pipes, but found: 4 pipes. #> Rows: 3 Columns: 4 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"|\" #> chr  (2): Name, City #> dbl  (1): Age #> date (1): Date #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 3 × 4 #>   Name    Age City        Date       #>   <chr> <dbl> <chr>       <date>     #> 1 Alice    30 <NA>        2021-01-08 #> 2 Bob      25 Los Angeles 2023-07-22 #> 3 Carol    27 Chicago     NA"},{"path":"https://jrdnbradford.github.io/readMDTable/reference/extract_md_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Markdown Tables from Markdown Files — extract_md_tables","title":"Extract Markdown Tables from Markdown Files — extract_md_tables","text":"Extract Markdown Tables Markdown Files","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/reference/extract_md_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Markdown Tables from Markdown Files — extract_md_tables","text":"","code":"extract_md_tables(file, warn = TRUE, ...)"},{"path":"https://jrdnbradford.github.io/readMDTable/reference/extract_md_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Markdown Tables from Markdown Files — extract_md_tables","text":"file Either path file, connection, literal data (either single string raw vector). Files starting http://, https://, ftp://, ftps:// automatically downloaded. warn Boolean. warnings raised possible issues passed file? Defaults TRUE. ... Arguments passed readr::read_delim quote Single character used quote strings. escape_backslash file use backslashes escape special characters? general escape_double backslashes can used escape delimiter character, quote character, add special characters like \\\\n. escape_double file escape quotes doubling ? .e. option TRUE, value \"\"\"\" represents single quote, \\\". col_names Either TRUE, FALSE character vector column names. TRUE, first row input used column names, included data frame. FALSE, column names generated automatically: X1, X2, X3 etc. col_names character vector, values used names columns, first row input read first row output data frame. Missing (NA) column names generate warning, filled dummy names ...1, ...2 etc. Duplicate column names generate warning made unique, see name_repair control done. col_types One NULL, cols() specification, string. See vignette(\"readr\") details. NULL, column types inferred guess_max rows input, interspersed throughout file. convenient (fast), robust. guessed types wrong, need increase guess_max supply correct types . Column specifications created list() cols() must contain one column specification column. want read subset columns, use cols_only(). Alternatively, can use compact string representation character represents one column: c = character = integer n = number d = double l = logical f = factor D = date T = date time t = time ? = guess _ - = skip default, reading file without column specification print message showing readr guessed . remove message, set show_col_types = FALSE set options(readr.show_col_types = FALSE). col_select Columns include results. can use mini-language dplyr::select() refer columns name. Use c() use one selection expression. Although usage less common, col_select also accepts numeric column index. See ?tidyselect::language full details selection language. id name column store file path. useful reading multiple input files data file paths, data collection date. NULL (default) extra column created. locale locale controls defaults vary place place. default locale US-centric (like R), can use locale() create locale controls things like default time zone, encoding, decimal mark, big mark, day/month names. na Character vector strings interpret missing values. Set option character() indicate missing values. quoted_na missing values inside quotes treated missing values (default) strings. parameter soft deprecated readr 2.0.0. comment string used identify comments. text comment characters silently ignored. skip Number lines skip reading data. comment supplied commented lines ignored skipping. n_max Maximum number lines read. guess_max Maximum number lines use guessing column types. never use number lines read. See vignette(\"column-types\", package = \"readr\") details. name_repair Handling column names. default behaviour ensure column names \"unique\". Various repair strategies supported: \"minimal\": name repair checks, beyond basic existence names. \"unique\" (default value): Make sure names unique empty. \"check_unique\": name repair, check unique. \"unique_quiet\": Repair unique strategy, quietly. \"universal\": Make names unique syntactic. \"universal_quiet\": Repair universal strategy, quietly. function: Apply custom name repair (e.g., name_repair = make.names names style base R). purrr-style anonymous function, see rlang::as_function(). argument passed repair vctrs::vec_as_names(). See details terms strategies used enforce . num_threads number processing threads use initial parsing lazy reading data. data contains newlines within fields parser automatically detect fall back using one thread . However know file newlines within quoted fields safest set num_threads = 1 explicitly. progress Display progress bar? default display interactive session knitting document. automatic progress bar can disabled setting option readr.show_progress FALSE. show_col_types FALSE, show guessed column types. TRUE always show column types, even supplied. NULL (default) show column types explicitly supplied col_types argument. skip_empty_rows blank rows ignored altogether? .e. option TRUE blank rows represented .  FALSE represented NA values columns. lazy Read values lazily? default, FALSE, special considerations reading file lazily tripped users. Specifically, things get tricky reading writing back file. , general, lazy reading (lazy = TRUE) many benefits, especially interactive use downstream work involves subset rows columns. Learn should_read_lazy() documentation altrep argument vroom::vroom().","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/reference/extract_md_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Markdown Tables from Markdown Files — extract_md_tables","text":"tibble list tibbles.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/reference/extract_md_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Markdown Tables from Markdown Files — extract_md_tables","text":"extract_md_tables attempts capture markdown tables file. must parse markdown may contain much just tables, requires tables follow markdown table format much closely readMDTable::read_md_table.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/reference/extract_md_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Markdown Tables from Markdown Files — extract_md_tables","text":"","code":"md <- \"# Heading 1  We'll split the `mtcars` dataset for testing `extract_md_tables`.  ## Heading 2  |model              |mpg |cyl|disp |hp |drat|wt   |qsec |vs |am |gear|carb| |-------------------|----|---|-----|---|----|-----|-----|---|---|----|----| |Mazda RX4          |21  |6  |160  |110|3.9 |2.62 |16.46|0  |1  |4   |4   | |Mazda RX4 Wag      |21  |6  |160  |110|3.9 |2.875|17.02|0  |1  |4   |4   | |Datsun 710         |22.8|4  |108  |93 |3.85|2.32 |18.61|1  |1  |4   |1   | |Hornet 4 Drive     |21.4|6  |258  |110|3.08|3.215|19.44|1  |0  |3   |1   |  ## Another Heading 2 Another paragraph.  With some lines.  Like this one.  |model              |mpg |cyl|disp |hp |drat|wt   |qsec |vs |am |gear|carb| |-------------------|----|---|-----|---|----|-----|-----|---|---|----|----| |Hornet Sportabout  |18.7|8  |360  |175|3.15|3.44 |17.02|0  |0  |3   |2   | |Valiant            |18.1|6  |225  |105|2.76|3.46 |20.22|1  |0  |3   |1   | |Duster 360         |14.3|8  |360  |245|3.21|3.57 |15.84|0  |0  |3   |4   | |Merc 240D          |24.4|4  |146.7|62 |3.69|3.19 |20   |1  |0  |4   |2   |  Just some paragraph text here.  |model              |mpg |cyl|disp |hp |drat|wt   |qsec |vs |am |gear|carb| |-------------------|----|---|-----|---|----|-----|-----|---|---|----|----| |Cadillac Fleetwood |10.4|8  |472  |205|2.93|5.25 |17.98|0  |0  |3   |4   | |Lincoln Continental|10.4|8  |460  |215|3   |5.424|17.82|0  |0  |3   |4   | |Chrysler Imperial  |14.7|8  |440  |230|3.23|5.345|17.42|0  |0  |3   |4   | |Fiat 128           |32.4|4  |78.7 |66 |4.08|2.2  |19.47|1  |1  |4   |1   |  |model              |mpg |cyl|disp |hp |drat|wt   |qsec |vs |am |gear|carb| |-------------------|----|---|-----|---|----|-----|-----|---|---|----|----| |Porsche 914-2      |26  |4  |120.3|91 |4.43|2.14 |16.7 |0  |1  |5   |2   | |Lotus Europa       |30.4|4  |95.1 |113|3.77|1.513|16.9 |1  |1  |5   |2   | |Ford Pantera L     |15.8|8  |351  |264|4.22|3.17 |14.5 |0  |1  |5   |4   | |Ferrari Dino       |19.7|6  |145  |175|3.62|2.77 |15.5 |0  |1  |5   |6   | |Maserati Bora      |15  |8  |301  |335|3.54|3.57 |14.6 |0  |1  |5   |8   | |Volvo 142E         |21.4|4  |121  |109|4.11|2.78 |18.6 |1  |1  |4   |2   |\"  # Extract tables from the markdown file tables <- extract_md_tables(md) #> Rows: 4 Columns: 12 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"|\" #> chr  (1): model #> dbl (11): mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 4 Columns: 12 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"|\" #> chr  (1): model #> dbl (11): mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 4 Columns: 12 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"|\" #> chr  (1): model #> dbl (11): mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 5 Columns: 12 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"|\" #> chr  (1): model #> dbl (11): mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.  # Display the 2nd table in the list tables[[2]] #> # A tibble: 4 × 12 #>   model          mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>   <chr>        <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 Hornet Spor…  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #> 2 Valiant       18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #> 3 Duster 360    14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #> 4 Merc 240D     24.4     4  147.    62  3.69  3.19  20       1     0     4     2"},{"path":"https://jrdnbradford.github.io/readMDTable/reference/readMDTable-package.html","id":null,"dir":"Reference","previous_headings":"","what":"readMDTable: Read Markdown Tables into Tibbles — readMDTable-package","title":"readMDTable: Read Markdown Tables into Tibbles — readMDTable-package","text":"Efficient reading raw markdown tables tibbles. Designed accept content strings, files, URLs can parse multiple tables single input.","code":""},{"path":[]},{"path":"https://jrdnbradford.github.io/readMDTable/reference/readMDTable-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"readMDTable: Read Markdown Tables into Tibbles — readMDTable-package","text":"Maintainer: Jordan Bradford jrdnbradford@gmail.com [copyright holder]","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/reference/read_md_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Markdown Table into a Tibble — read_md_table","title":"Read a Markdown Table into a Tibble — read_md_table","text":"Read Markdown Table Tibble","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/reference/read_md_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Markdown Table into a Tibble — read_md_table","text":"","code":"read_md_table(file, warn = TRUE, ...)"},{"path":"https://jrdnbradford.github.io/readMDTable/reference/read_md_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Markdown Table into a Tibble — read_md_table","text":"file Either path file, connection, literal data (either single string raw vector). Files starting http://, https://, ftp://, ftps:// automatically downloaded. warn Boolean. warnings raised possible issues passed file? Defaults TRUE. ... Arguments passed readr::read_delim quote Single character used quote strings. escape_backslash file use backslashes escape special characters? general escape_double backslashes can used escape delimiter character, quote character, add special characters like \\\\n. escape_double file escape quotes doubling ? .e. option TRUE, value \"\"\"\" represents single quote, \\\". col_names Either TRUE, FALSE character vector column names. TRUE, first row input used column names, included data frame. FALSE, column names generated automatically: X1, X2, X3 etc. col_names character vector, values used names columns, first row input read first row output data frame. Missing (NA) column names generate warning, filled dummy names ...1, ...2 etc. Duplicate column names generate warning made unique, see name_repair control done. col_types One NULL, cols() specification, string. See vignette(\"readr\") details. NULL, column types inferred guess_max rows input, interspersed throughout file. convenient (fast), robust. guessed types wrong, need increase guess_max supply correct types . Column specifications created list() cols() must contain one column specification column. want read subset columns, use cols_only(). Alternatively, can use compact string representation character represents one column: c = character = integer n = number d = double l = logical f = factor D = date T = date time t = time ? = guess _ - = skip default, reading file without column specification print message showing readr guessed . remove message, set show_col_types = FALSE set options(readr.show_col_types = FALSE). col_select Columns include results. can use mini-language dplyr::select() refer columns name. Use c() use one selection expression. Although usage less common, col_select also accepts numeric column index. See ?tidyselect::language full details selection language. id name column store file path. useful reading multiple input files data file paths, data collection date. NULL (default) extra column created. locale locale controls defaults vary place place. default locale US-centric (like R), can use locale() create locale controls things like default time zone, encoding, decimal mark, big mark, day/month names. na Character vector strings interpret missing values. Set option character() indicate missing values. quoted_na missing values inside quotes treated missing values (default) strings. parameter soft deprecated readr 2.0.0. comment string used identify comments. text comment characters silently ignored. skip Number lines skip reading data. comment supplied commented lines ignored skipping. n_max Maximum number lines read. guess_max Maximum number lines use guessing column types. never use number lines read. See vignette(\"column-types\", package = \"readr\") details. name_repair Handling column names. default behaviour ensure column names \"unique\". Various repair strategies supported: \"minimal\": name repair checks, beyond basic existence names. \"unique\" (default value): Make sure names unique empty. \"check_unique\": name repair, check unique. \"unique_quiet\": Repair unique strategy, quietly. \"universal\": Make names unique syntactic. \"universal_quiet\": Repair universal strategy, quietly. function: Apply custom name repair (e.g., name_repair = make.names names style base R). purrr-style anonymous function, see rlang::as_function(). argument passed repair vctrs::vec_as_names(). See details terms strategies used enforce . num_threads number processing threads use initial parsing lazy reading data. data contains newlines within fields parser automatically detect fall back using one thread . However know file newlines within quoted fields safest set num_threads = 1 explicitly. progress Display progress bar? default display interactive session knitting document. automatic progress bar can disabled setting option readr.show_progress FALSE. show_col_types FALSE, show guessed column types. TRUE always show column types, even supplied. NULL (default) show column types explicitly supplied col_types argument. skip_empty_rows blank rows ignored altogether? .e. option TRUE blank rows represented .  FALSE represented NA values columns. lazy Read values lazily? default, FALSE, special considerations reading file lazily tripped users. Specifically, things get tricky reading writing back file. , general, lazy reading (lazy = TRUE) many benefits, especially interactive use downstream work involves subset rows columns. Learn should_read_lazy() documentation altrep argument vroom::vroom().","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/reference/read_md_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a Markdown Table into a Tibble — read_md_table","text":"tibble created markdown table.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/reference/read_md_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a Markdown Table into a Tibble — read_md_table","text":"read_md_table reads markdown table tibble string, file, URL. uses readr::read_delim efficiently read data. read_md_table expects file markdown table.  file markdown file contains just table tables, table(s) extracted extract_md_tables reading . warn TRUE, read_md_table warn potential issues provided markdown table. Depending issue, read_md_table may still correctly read table. instance, row separating header rows malformed rows missing leading trailing pipes, warnings raised data read correctly. readr::read_delim provide warnings potential issues.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/reference/read_md_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a Markdown Table into a Tibble — read_md_table","text":"","code":"# Read from a file read_md_table(read_md_table_example(\"mtcars.md\")) #> Rows: 32 Columns: 12 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"|\" #> chr  (1): model #> dbl (11): mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 32 × 12 #>    model         mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <chr>       <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 Mazda RX4    21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2 Mazda RX4 …  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3 Datsun 710   22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4 Hornet 4 D…  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5 Hornet Spo…  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6 Valiant      18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7 Duster 360   14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8 Merc 240D    24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9 Merc 230     22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10 Merc 280     19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> # ℹ 22 more rows  # Read from a string read_md_table(\"| H1 | H2 | \\n|-----|-----|\\n| R1C1 | R1C2 |\\n| R2C1 | R2C2 |\") #> Rows: 2 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"|\" #> chr (2): H1, H2 #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 2 × 2 #>   H1    H2    #>   <chr> <chr> #> 1 R1C1  R1C2  #> 2 R2C1  R2C2   # \\donttest{ # Read from a URL read_md_table(   \"https://raw.githubusercontent.com/jrdnbradford/readMDTable/main/inst/extdata/iris.md\" ) #> Rows: 150 Columns: 5 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"|\" #> chr (1): variety #> dbl (4): sepal.length, sepal.width, petal.length, petal.width #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 150 × 5 #>    sepal.length sepal.width petal.length petal.width variety #>           <dbl>       <dbl>        <dbl>       <dbl> <chr>   #>  1          5.1         3.5          1.4         0.2 Setosa  #>  2          4.9         3            1.4         0.2 Setosa  #>  3          4.7         3.2          1.3         0.2 Setosa  #>  4          4.6         3.1          1.5         0.2 Setosa  #>  5          5           3.6          1.4         0.2 Setosa  #>  6          5.4         3.9          1.7         0.4 Setosa  #>  7          4.6         3.4          1.4         0.3 Setosa  #>  8          5           3.4          1.5         0.2 Setosa  #>  9          4.4         2.9          1.4         0.2 Setosa  #> 10          4.9         3.1          1.5         0.1 Setosa  #> # ℹ 140 more rows # }  # Get warnings for malformed tables read_md_table(   \"| Name  | Age | City        | Date       |    |-------|-----|-------------|------------|    | Alice | 30  | New York    | 2021/01/08 |    | Bob   | 25  | Los Angeles | 2023/07/22 |      Carol | 27  | Chicago     | 2022/11/01  \" ) #> Warning: ✖ Row 5 of the table does not have the same number of cells as the header row: #>   Carol | 27 | Chicago | 2022/11/01 #> ℹ Expected: 5 pipes, but found: 3 pipes. #> Rows: 3 Columns: 4 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"|\" #> chr  (2): Name, City #> dbl  (1): Age #> date (1): Date #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 3 × 4 #>   Name    Age City        Date       #>   <chr> <dbl> <chr>       <date>     #> 1 Alice    30 New York    2021-01-08 #> 2 Bob      25 Los Angeles 2023-07-22 #> 3 Carol    27 Chicago     2022-11-01"},{"path":"https://jrdnbradford.github.io/readMDTable/reference/read_md_table_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Path to readMDTable Examples — read_md_table_example","title":"Get Path to readMDTable Examples — read_md_table_example","text":"Get Path readMDTable Examples","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/reference/read_md_table_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Path to readMDTable Examples — read_md_table_example","text":"","code":"read_md_table_example(file = NULL)"},{"path":"https://jrdnbradford.github.io/readMDTable/reference/read_md_table_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Path to readMDTable Examples — read_md_table_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/reference/read_md_table_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Path to readMDTable Examples — read_md_table_example","text":"Vector example file names file NULL, else path example markdown table file.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/reference/read_md_table_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Path to readMDTable Examples — read_md_table_example","text":"readMDTable comes number well-known datasets example markdown tables inst/extdata directory. read_md_table_example list file names return path specified file.","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/reference/read_md_table_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Path to readMDTable Examples — read_md_table_example","text":"","code":"# List the available example files read_md_table_example() #> [1] \"ToothGrowth.md\"  \"iris.md\"         \"mtcars-split.md\" \"mtcars.md\"        # Get the path to the mtcars example file read_md_table_example(\"mtcars.md\") #> [1] \"/home/runner/work/_temp/Library/readMDTable/extdata/mtcars.md\"  # Read in an example file mtcars_path <- read_md_table_example(\"mtcars.md\") read_md_table(mtcars_path) #> Rows: 32 Columns: 12 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"|\" #> chr  (1): model #> dbl (11): mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 32 × 12 #>    model         mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <chr>       <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 Mazda RX4    21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2 Mazda RX4 …  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3 Datsun 710   22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4 Hornet 4 D…  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5 Hornet Spo…  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6 Valiant      18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7 Duster 360   14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8 Merc 240D    24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9 Merc 230     22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10 Merc 280     19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> # ℹ 22 more rows"},{"path":"https://jrdnbradford.github.io/readMDTable/news/index.html","id":"readmdtable-development-version","dir":"Changelog","previous_headings":"","what":"readMDTable (development version)","title":"readMDTable (development version)","text":"@inheritDotParams arguments passed readr::read_delim Abstracted reading markdown tables new internal function read_md_table_content.R (#42) Add vignette benchmarking {readMDTable} {rvest} (#40) Added extract_md_tables, captures markdown tables markdown file (#36)","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/news/index.html","id":"readmdtable-011","dir":"Changelog","previous_headings":"","what":"readMDTable 0.1.1","title":"readMDTable 0.1.1","text":"CRAN release: 2024-09-17 Fixed issue Windows warning incorrectly raised valid separator lines (#28) Move {httr} {httr2} (#26) Added example warning read_md_table Fixed issue rendering PDF manual due unicode characters","code":""},{"path":[]},{"path":"https://jrdnbradford.github.io/readMDTable/news/index.html","id":"warning-updates-0-1-0","dir":"Changelog","previous_headings":"","what":"Warning Updates","title":"readMDTable 0.1.0","text":"read_md_table now warn param make warnings optional (#15) Checking markdown table validity now uses vectorization (#12) Warnings now use {cli} (#12) warn_md_table now explicitly returns NULL invisibly (#10)","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/news/index.html","id":"misc-0-1-0","dir":"Changelog","previous_headings":"","what":"Misc","title":"readMDTable 0.1.0","text":"Added logo (#22) Improvements function documentation (#10) Added test coverage {covr} (#17)","code":""},{"path":"https://jrdnbradford.github.io/readMDTable/news/index.html","id":"readmdtable-001","dir":"Changelog","previous_headings":"","what":"readMDTable 0.0.1","title":"readMDTable 0.0.1","text":"Initial release.","code":""}]
